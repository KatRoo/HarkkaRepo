Ohjelmistoarkkitehtuurin sisällyttäminen ketteriin ohjelmistotuotantomenetelmiin
Tero Huomo
Kandidaatin tutkielma

Referaatti

Ketterissä menetelmissä projekti tuotetaan iteraatioissa. Scrummissa kahdesta neljään viikkon kestävissä sprinteissä. Extreme Programmingissa yhdestä kolmeen viikkoon kestävissä iteraatioissa. Tuotantanto jaksossa tuotetaan aina muutama asiakkaan ja tuotantoryhmän valitsema ominaisuus. Ketterässä ohjelmistokehityksessä suunnittelun voi jakaa kolmeen osaan. Julkaisun suunnitteluun eli releasa planning, iteraation suunnitteluun eli iteration planning ja kehitysjakson aikana tapahtuvaan suunnitteluun.

Scrumissa ja Extreme Programmingissa järjestettään projektin aluksi lyhyt suunnittelu vaihe. Asiakkaan vaatimukset kerätään käyttäjätarinoina eli user storyinä. User storyt kerätään työlistaan. Scrumissä tätä kutsutaan backlogiksi. Asiakas päättää listan tärkeysjärjestyksen. Myös käyttäjätarinoiden ohjelmoimiseen kuluvaa aikaa arvioidaan. Asiakas voi uudelleen priorisoidaa työlistaa ja lisätä sekä poistaa user storyjä koko projektin ajan.

Iteraation suunnittelu toteutetaan Scrumissa kaksiosaisena lyhyenä suunnittelu tilaisuutena jokaisen sprintin aluksi. Extreme Programming ei tee kaksiosaista jakoa vaikka lähetymistapa on melko samanlainen. Ensimmäisessä osassa selvitetään tuotantojakson tavoite. Toteutettavat käyttäjätarinat valitaan. Kehitysryhmä sitoutuu vaatimusten toteuttamiseen. Suunnittelun toisessa vaiheessa suunnitellaan, miten kehitysryhmä saavuttaa tavoitteet. Scrummissa on vielä tapana pilkkoa user storyt pienemmiksi noin yhden työpaivän vieviksi taskeiksi.

Kehitysjakson aikana tapahtuvaan suunnitteluun ketterissä ohjelmistokehitysmenetelmissä annetaan vähemmän ohjeita. Scrum ei ota ollenkaan kantaa aiheesta vaan luottaa ryhmän itseorganisoituvuuteen. Yksi ketterän kehitysen pääperjaatteista on yksikertaisuuden vaaliminen. Extreme Programmingin ohje kehitysjakson aikana tapahtuvaan suunnitteluun on turhan työn minimointi. Mitään ylimääräistä työtä ei tehdä. Extreme Programming korostaa myös refaktoroinnin tärkeyttä.

Ohjelmistoarkkitehtuuri määrittelee järjestelmän suuret linjat. IEEE:n stardardin mukaan siihen kuuluu järjestelmän korkean tason rakenne, joka sisältää järjestelmän osat, sisäiset suhteet sekä tiedon osien yhteistyöstä. Ketterissä menetelmissä pääpaino on toteuttaa ohjelmisto inkrementaalisesti pienissä osissa ilman erillistä arkkitehtuuria. Tämän takia projekti vaatii kokeneita työntekijöitä, mitä löytyy vähän. Suunnittelu vaiheen puuttuessa rajoitteet ja vaatimikset tulevat esille vasta kehityksen aikana. Tämä voi tehdä projektista vaikean jakaa usealle kehittäjäryhmälle. Alustavan rakenteen puuttuminen voi luoda myös tarpeen suurelle määrälle muokkaamista ja uudelleen tehtävää työtä. Järjestelmän laajuinen refaktorointi voi myös viivästyttää projektia. Turhan työn välttäminen jättää myös päätökset viime hetkeen, mikä voi johtaa projektiin kaaokseen.

Erillaisia käytäntöjä on otettu käyttöön, millä ohjelmistoarkketehtuurin työn voi sisällyttää ketterään kehitykseen. Sprint 0 on jakso, missä voidaan tehdä alustava arkkitehtuuri, asentaa palvelimet, konffata tietokoneet ja muuta sellaista. Suosiostaan huolimatta sprint 0 on ketterän kehityksen käytänteiden vastainen. Arkkitehtuuri voidaan toteuttaa myös erillisenä prosessina. Eriytettynä arkkitehtuuriprosessi voi kuitenkin johtaa siihen, että se ei huomioi riittävästi asiakkaan muuttuvia vaatimuksia. Suunnittelu piikit ovat iteraation aikana suoritettavia työjaksoja, joissa ratkotaan järjestelmän laajentamisesta koituvia ongelmia, suunnittelun haasteita sekä uuden teknologian vaikutusta järjestelmään. Suunnitelma piikkejä kohdellaan kuten käyttäjätarinoita. Ne listataan ja priorisoidaan. Extreme Programming hyväksyy piikit käytäntönä. Suunnitelu voidaan tehdä myös arkkitehtuurijaksona eli architecture sprinttinä. Tämä on samankaltainen kuin sprint 0. Arkkitehtuuritarinat ovat käyttäjätaronoita vastaavia vaatimuksia. Niitä kirjaa kehittävä ryhmä. Niiden viemä aika estimoidaan ja ne priorisoidaan. Nämä eivät ole ketterän ohjelmistokehityksen vastaisia.


